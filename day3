// 2D array/

let rows = Number(prompt("Enter a rows"));
let cols = Number(prompt("Enter a columns"));

let arr = [];

for(let i = 0;i<rows;i++){
    arr[i]=[];
    for(let j=0;j<cols;j++){
      arr[i][j] = Number(prompt(`Enter a element [${i}] [${j}]`));
    }
}
console.log(arr);

// Searching in 2d array
let arr = [ [10,20,30],
            [40,50,60],
             [70,80,90]];
             


let key = 90;
let found = false;
for(let i=0;i<arr.length;i++){
    for(let j=0;j<arr[i].length;j++){
        if(arr[i][j] === key){
            console.log(`Your ${key} is on [${i}][${j}]`);
            found = true;
            break;
        }
    }
    if(found)
     break;
}
if(!found){
console.log("key is not there");}


//2D ARRAY  SPIRAL MATRIX
let arr = [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]];
let SR = 0;
let SC = 0;
let ER = arr.length-1;
let EC = arr[0].length-1

while(SR <= ER && SC <= EC){
    // start
    for(let j = SC;j<=EC;j++){
        console.log(arr[SR][j]+" ");
    }
    // right
    for(let i = SR+1;i<=ER;i++){
        console.log(arr[i][EC]+" ");
    }
    // bottom
    for(let j = EC-1;j>=SC;j--){
        console.log(arr[EC][j]+" ");
    }
    //LEFT
    for(let i = ER-1;i>=SR+1;i--){
        console.log(arr[i][SC]+" ");
    }
    SC++;
    SR++;
    EC--;
    ER--;
}

// DIAGONAL SUM
let arr = [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]];
let sum = 0;

for(let i =0 ;i <arr.length;i++){
    
    for(let j = 0 ;j<arr[0].length;j++){
        if(i==j){
            sum+=arr[i][j]
        } else if(i+j == arr.length-1){
            sum+=arr[i][j]
        }
    }
}
 console.log(sum); 

//  better way same sum


 let arr = [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]];
function Diagonalsum(arr){
   
    let sum = 0;
    for(let i =0 ;i <arr.length;i++){
    sum+=arr[i][i];

if(i  !== arr.length-i-1){
    sum += arr[i] [arr.length-i-1];
}   
}
console.log(sum);
}

Diagonalsum(arr);

// Searching

 let arr = [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]];
 let key = 32;
function Searching(arr,key){
    let row = 0;let col = arr[0].length-1;
    
    while(row<arr.length && col >=0){
        if(arr[row][col] == key){
            console.log("Founded key");
            return true;
        }else if(key < arr[row][col]){
            row--;
        }else{
            row++;
        }
    }
    console.log("Not found");
    return false;
}
Searching(arr,key)



let arr = [1, 2, 3, 4, 5];
let reversed = [];

for (let i = arr.length - 1; i >= 0; i--) {
    reversed.push(arr[i]);
}
console.log("Reversed:", reversed);

// Fourth sum
let n = 5;
for (let i = 0; i < n; i++){
    let row = " ";
    for (let j = 0; j < i + 1; j++){
        if ((i + j) % 2 == 0) {
            row += "1";
        } else {
            row += "0";
        }
    }
    console.log(row);
}

// fifth sum
let n = 5;
for (let i = 0; i < n; i++) {
    let row = " ";

    for (let j = 0; j <= i; j++) {
        row += "*";
    }
    for (let j = 0; j < 2 * (n-i-1); j++){
        row += " ";
    }
    for (let j = 0; j <= i; j++) {
        row += "*";
    }
  
    console.log(row);
}
for (let i = n - 1; i >= 0; i--) {
    let row = " ";

    for (let j = 0; j <= i; j++) {
        row += "*";
    }
    for (let j = 0; j < 2 * (n - i - 1); j++) {
        row += " ";
    }
    for (let j = 0; j <= i; j++) {
        row += "*";
    }

    console.log(row);
}

//6 Sum//
let n = 5;
let counter = "1";

for (let i = 0; i < n; i++) {
    let row = " ";

    //space//
    for (let j = 0; j < n - i; j++) {
        row += " ";
    }
    // number
    for (let j = 1; j < i + 1; j++) {
        row += j + "";
    }
    for (let j = i - 1; j >= 1; j--){
        row += j + "";
    }
    console.log(row);
}


//linear search//

let arr = [2, 4, 6, 8, 10, 12, 14];
let found = false;
let key = 20;

for (let i = 0; i < arr.length; i++){
    if (arr[i] === key) {
        found = true;
        break;
    }
}

if (!found) {
    console.log("Key is not found");
}


//largest no in array
let arr = [4, 5, 10, 23, 45]
let max = arr[0];

for (let i = 0; i < arr.length; i++){
    if (arr[i] > max) {
        max = arr[i]
    }
}
console.log(max)

//Binary search
let arr = [3, 4, 5, 6, 7, 8, 9];
let key = 3;
let start = 0;
let end = arr.length - 1;
let index = arr[0];

while (start <= end) {
    let mid = (start + end) / 2;

    if (arr[mid] == key) {
        index = mid;
        console.log('Index of key is' +" " + key + " " +index)
    }
    if (arr[mid] < key) {
        start = mid + 1;
    }
    else{
        end = mid -1;
    }
   
}
 //Reverse array
 let arr = [2, 3, 4, 5];
let start = 0;
let end = arr.length - 1;

while (start < end) {
    let temp = arr[start];
    arr[start] = arr[end];
    arr[end] = temp;
    start++;
    end--;
    
}
console.log(arr);


//Print pair
let arr = [2,4,6,8,10];

for(let i =0;i<arr.length;i++){
    let curr = arr[i];
    for(let j =i+1;j<arr.length;j++){
        console.log( " (" + curr + " , " + arr[j]+")");
    }
    
}

//Subpair
let arr = [2,4,6,8,10];
for(let i = 0;i<arr.length;i++){
    let curr = arr[i];
    for(let j = i;j<arr.length;j++){
        let subarray = " ";
        for(let k = i;k<=j;k++){
            subarray += arr[k] + " ";
        }
        console.log(subarray);
    }
}

//sum od subarray

//Sort
//let arr = [5,4,6,3,7,2];
for(let i = 0 ;i <arr.length-1;i++){
    let minpoint = i;
    for(let j = i + 1;j<arr.length;j++){
        if(arr[minpoint] > arr[j]){
            minpoint = j;
        }
    }
    let temp = arr[i];
    arr[i] = arr[minpoint];
    arr[minpoint] = temp;
    
}
console.log(arr);







